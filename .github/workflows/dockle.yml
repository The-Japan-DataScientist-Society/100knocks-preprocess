name: dockle

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  dockle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: |
          sudo curl -fsSL https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-x86_64 -o /usr/libexec/docker/cli-plugins/docker-compose
          sudo chmod +x /usr/libexec/docker/cli-plugins/docker-compose
          docker compose version
          systemctl restart docker.service
      - name: Run docker containers
        run: docker compose up -d
      - name: Get latest dockle version
        uses: actions/github-script@v6.3.3
        id: get_latest_dockle_version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const release = await github.rest.repos.getLatestRelease({
              owner: 'goodwithtech',
              repo: 'dockle'
            });
            return release.data.tag_name;
      - name: Run Dockle
        run: |
          docker compose images
          for image_name in $(docker compose images | awk 'OFS=":" {print $2,$4}' | tail -n +2); do
            cmd="docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd)/.dockleignore:/.dockleignore "
            cmd+="goodwithtech/dockle:v0.4.11 --exit-code 1 --exit-level info --debug "

            if [[ "${image_name}" =~ "dss-notebook" ]]; then
              cmd+="--timeout 600s -ae mdf -af settings.py -af credentials -i DKL-DI-0001 "
            elif [[ "${image_name}" =~ "dss-postgres" ]]; then
              cmd+="-ak key "
            fi

            cmd+="${image_name}"
            echo "> ${cmd}"
            eval "${cmd}"
          done
